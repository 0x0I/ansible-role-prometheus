---
- name: Include OS and distribution specific variables.
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
      skip: true
  tags:
    - always

- name: Set Prometheus file_sd path
  set_fact:
    filesd_path: '{{ install_dir }}/file_sd'
  when: install_type == 'archive'
  tags:
    - preflight
    - filesd

- name: Set Prometheus rule_files path
  set_fact:
    rule_files: '{{ install_dir }}/rules.d'
  when: install_type == 'archive'
  tags:
    - preflight
    - rules

- name: Set Prometheus unit [Service] configuration
  set_fact:
    _default_service_unit:
      ExecStart: "{{ install_dir }}/prometheus --config.file={{ config_dir }}/prometheus.yml --storage.tsdb.path={{ data_dir }} {{ extra_run_args|join(' ') }}"
      User: "{{ prometheus_user }}"
      Group: "{{ prometheus_user }}"
      StandardOutput: journal
      StandardError: inherit
  when: '"prometheus" in managed_services'
  tags:
    - preflight

- name: Set Alertmanager templates path
  set_fact:
    templates_path: '{{ install_dir }}/templates'
  when: '"alertmanager" in managed_services'
  tags:
    - preflight
    - alertmanager
    - templates

- name: Set Alertmanager unit [Service] configuration
  set_fact:
    _alertmgr_service_unit:
      ExecStart: "{{ alertmgr_installdir }}/alertmanager --config.file={{ alertmgr_configdir }}/alertmanager.yml {{ extra_alertmgr_args|join(' ') }}"
      User: "{{ prometheus_user }}"
      Group: "{{ prometheus_user }}"
      StandardOutput: journal
      StandardError: inherit
  when: '"alertmanager" in managed_services'
  tags:
    - preflight
    - alertmanager

- name: Set Prometheus exporters install dir
  set_fact:
    exporter_installdir: '{{ install_dir }}/exporters'
  when: '"prometheus" in managed_services'
  tags:
    - preflight
    - exporters

- name: Check for uninstall signal
  block:
    - name: Broadcast uninstall signal
      command: /bin/true
      notify:
        - Uninstall prometheus
        - Uninstall alertmanager

    - name: End play following uninstallation
      meta: end_play
  when: perform_uninstall
  ignore_errors: true
